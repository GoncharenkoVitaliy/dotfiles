#!/usr/bin/env bash
# phone ‚Äî mount Android phone (MTP) via GVFS and expose a stable path at ~/phone
# Description: Mounts the first detected MTP device using gio/GVFS, creates a
# stable symlink at $HOME/phone for easy CLI access, and prints the final path.
# Works well alongside KDE Dolphin (KIO). If Dolphin holds the device, the
# script will try to close it to free the MTP handle.

set -euo pipefail

MOUNT_ROOT="/run/user/$(id -u)/gvfs"
SYMLINK_TARGET="$HOME/phone"

log() { echo -e "$*"; }

errexit() { echo "‚úó $*" >&2; exit 1; }

# 1) Optionally close Dolphin if it holds the MTP handle (safe no-op if not running)
if pgrep -x dolphin >/dev/null 2>&1; then
  log "‚ÑπÔ∏è  –ó–∞–∫—Ä—ã–≤–∞—é Dolphin, —á—Ç–æ–±—ã –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ MTP..."
  killall -q dolphin || true
  sleep 1
fi

# 2) Ensure GVFS is available
if ! command -v gio >/dev/null 2>&1; then
  errexit "gio –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GVFS: sudo pacman -S gvfs gvfs-mtp"
fi

# 3) Try to discover MTP activation URI from gio
activation_uri=$(gio mount -li | awk -F 'activation_root=' '/mtp:\/\// {print $2}' | sed 's/\r//; s/\s*$//' | head -n1)

if [[ -z "${activation_uri:-}" ]]; then
  log "‚ÑπÔ∏è  MTP-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ gio. –ü—Ä–æ–≤–µ—Ä—é –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
  # Nudge gvfs; sometimes listing volumes triggers detection
  gio mount -li >/dev/null 2>&1 || true
  activation_uri=$(gio mount -li | awk -F 'activation_root=' '/mtp:\/\// {print $2}' | sed 's/\r//; s/\s*$//' | head -n1)
fi

if [[ -z "${activation_uri:-}" ]]; then
  errexit "MTP-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –∫–∞–±–µ–ª—å USB, —Ä–µ–∂–∏–º '–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ (MTP)', —Ç–µ–ª–µ—Ñ–æ–Ω —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
fi

log "üîå –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: $activation_uri"

# 4) Try to mount via gio (idempotent)
if ! gio mount "$activation_uri" >/dev/null 2>&1; then
  log "‚ÑπÔ∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é, –ø–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑..."
  sleep 1
  gio mount "$activation_uri" || true
fi

# 5) Resolve mounted path under GVFS
# Example: /run/user/1000/gvfs/mtp:host=Xiaomi_Redmi_10C_XXXXXXXX/
phone_path=$(find "$MOUNT_ROOT" -maxdepth 1 -type d -name 'mtp:host=*' 2>/dev/null | head -n1)

if [[ -z "${phone_path:-}" ]]; then
  # Sometimes appears with a slight delay
  sleep 1
  phone_path=$(find "$MOUNT_ROOT" -maxdepth 1 -type d -name 'mtp:host=*' 2>/dev/null | head -n1)
fi

if [[ -z "${phone_path:-}" ]]; then
  errexit "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ $MOUNT_ROOT."
fi

# 6) Create/update a stable symlink in home
ln -sfn "$phone_path" "$SYMLINK_TARGET"

log "‚úì –¢–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω: $phone_path"
log "‚úì –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø: $SYMLINK_TARGET"

# 7) Optionally list top-level contents for quick feedback
if [[ -d "$phone_path" ]]; then
  ls -lh "$phone_path" | sed 's/^/  /'
fi
